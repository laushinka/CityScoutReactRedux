Object.defineProperty(exports,"__esModule",{value:true});var _defaults2=require("lodash/defaults");var _defaults3=_interopRequireDefault(_defaults2);var _omit2=require("lodash/omit");var _omit3=_interopRequireDefault(_omit2);var _pick2=require("lodash/pick");var _pick3=_interopRequireDefault(_pick2);var _assign2=require("lodash/assign");var _assign3=_interopRequireDefault(_assign2);
var _victoryCore=require("victory-core");
var _scale=require("../../helpers/scale");var _scale2=_interopRequireDefault(_scale);
var _domain=require("../../helpers/domain");var _domain2=_interopRequireDefault(_domain);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}exports.default=

{
getBaseProps:function getBaseProps(props,fallbackProps){// eslint-disable-line max-statements
var modifiedProps=props.theme&&props.theme.candlestick?
_victoryCore.Helpers.modifyProps(props,fallbackProps,props.theme.candlestick.props):
_victoryCore.Helpers.modifyProps(props,fallbackProps);
var calculatedValues=this.getCalculatedValues(modifiedProps,fallbackProps);var
data=calculatedValues.data;var style=calculatedValues.style;var scale=calculatedValues.scale;var
groupComponent=modifiedProps.groupComponent;var width=modifiedProps.width;var height=modifiedProps.height;var padding=modifiedProps.padding;
var childProps={parent:{scale:scale,width:width,height:height,data:data,style:style.parent}};
for(var index=0,len=data.length;index<len;index++){
var datum=data[index];
var eventKey=datum.eventKey||index;
var x=scale.x(datum.x);
var y1=scale.y(datum.high);
var y2=scale.y(datum.low);
var candleHeight=Math.abs(scale.y(datum.open)-scale.y(datum.close));
var y=scale.y(Math.max(datum.open,datum.close));
var dataStyle=this.getDataStyles(datum,style.data,modifiedProps);
var dataProps={
x:x,y:y,y1:y1,y2:y2,candleHeight:candleHeight,scale:scale,data:data,datum:datum,groupComponent:groupComponent,
index:index,style:dataStyle,padding:padding,width:width};


var text=this.getLabelText(modifiedProps,datum,index);
var labelStyle=this.getLabelStyle(style.labels,dataProps);
var labelProps={
style:labelStyle,
x:x-labelStyle.padding,
y:y-labelStyle.padding,
text:text,
index:index,
scale:scale,
datum:dataProps.datum,
textAnchor:labelStyle.textAnchor,
verticalAnchor:labelStyle.verticalAnchor||"end",
angle:labelStyle.angle};

childProps[eventKey]={
data:dataProps,
labels:labelProps};

}
return childProps;
},

getCalculatedValues:function getCalculatedValues(props,fallbackProps){
var style=_victoryCore.Helpers.getStyles(props.style,fallbackProps.style,"auto","100%");
var data=_victoryCore.Events.addEventKeys(props,this.getData(props));
var range={
x:_victoryCore.Helpers.getRange(props,"x"),
y:_victoryCore.Helpers.getRange(props,"y")};

var domain={
x:this.getDomain(props,"x"),
y:this.getDomain(props,"y")};

var scale={
x:_scale2.default.getBaseScale(props,"x").domain(domain.x).range(range.x),
y:_scale2.default.getBaseScale(props,"y").domain(domain.y).range(range.y)};

return{data:data,scale:scale,style:style};
},

getData:function getData(props){
if(!props.data||props.data.length<1){
_victoryCore.Log.warn("This is an empty dataset.");
return[];
}

var accessor={
x:_victoryCore.Helpers.createAccessor(props.x),
open:_victoryCore.Helpers.createAccessor(props.open),
close:_victoryCore.Helpers.createAccessor(props.close),
high:_victoryCore.Helpers.createAccessor(props.high),
low:_victoryCore.Helpers.createAccessor(props.low)};


return props.data.map(function(datum){
var x=accessor.x(datum);
var open=accessor.open(datum);
var close=accessor.close(datum);
var high=accessor.high(datum);
var low=accessor.low(datum);
var y=[open,close,high,low];
return(0,_assign3.default)(
{},
datum,
{x:x,y:y,open:open,close:close,high:high,low:low});

});
},

getDomain:function getDomain(props,axis){
var domain=void 0;
if(props.domain&&props.domain[axis]){
domain=props.domain[axis];
}else if(props.domain&&Array.isArray(props.domain)){
domain=props.domain;
}else{
var dataset=this.getData(props);
var allData=dataset.reduce(function(memo,datum){
return Array.isArray(datum[axis])?
memo.concat.apply(memo,_toConsumableArray(datum[axis])):memo.concat(datum[axis]);
},
[]);

if(allData.length<1){
return _scale2.default.getBaseScale(props,axis).domain();
}

var min=Math.min.apply(Math,_toConsumableArray(allData));
var max=Math.max.apply(Math,_toConsumableArray(allData));
if(min===max){
var adjustedMax=max===0?1:max+max;
return[0,adjustedMax];
}
domain=[min,max];
}
return _domain2.default.cleanDomain(_domain2.default.padDomain(domain,props,axis),props);
},

isTransparent:function isTransparent(attr){
return attr==="none"||attr==="transparent";
},

getDataStyles:function getDataStyles(datum,style,props){
var stylesFromData=(0,_omit3.default)(datum,[
"x","y","size","name","label","open","close","high","low"]);

var candleColor=datum.open>datum.close?
props.candleColors.negative:props.candleColors.positive;
var fill=datum.fill||style.fill||candleColor;
var strokeColor=datum.stroke||style.stroke;
var stroke=this.isTransparent(strokeColor)?fill:strokeColor;
var baseDataStyle=(0,_defaults3.default)({},stylesFromData,{stroke:stroke,fill:fill},style);
return _victoryCore.Helpers.evaluateStyle(baseDataStyle,datum);
},

getLabelText:function getLabelText(props,datum,index){
var propsLabel=Array.isArray(props.labels)?
props.labels[index]:_victoryCore.Helpers.evaluateProp(props.labels,datum);
return datum.label||propsLabel;
},

getLabelStyle:function getLabelStyle(labelStyle,dataProps){var
datum=dataProps.datum;var size=dataProps.size;var style=dataProps.style;
var matchedStyle=(0,_pick3.default)(style,["opacity","fill"]);
var padding=labelStyle.padding||size*0.25;
var baseLabelStyle=(0,_defaults3.default)({},labelStyle,matchedStyle,{padding:padding});
return _victoryCore.Helpers.evaluateStyle(baseLabelStyle,datum);
}};