Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=require("react");var _react2=_interopRequireDefault(_react);
var _victoryCore=require("victory-core");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var



ClipPath=function(_React$Component){_inherits(ClipPath,_React$Component);function ClipPath(){_classCallCheck(this,ClipPath);return _possibleConstructorReturn(this,Object.getPrototypeOf(ClipPath).apply(this,arguments));}_createClass(ClipPath,[{key:"render",value:function render()


























































{var _props=






this.props;var clipId=_props.clipId;var clipWidth=_props.clipWidth;var clipHeight=_props.clipHeight;var barWidth=_props.barWidth;var clipPadding=_props.clipPadding;

var padding=_victoryCore.Helpers.getPadding(this.props);
var modifiedBarWidth=barWidth||0;

var totalPadding=function totalPadding(side){return padding[side]-clipPadding[side];};

return(
_react2.default.createElement("defs",null,
_react2.default.createElement("clipPath",{id:clipId},
_react2.default.createElement("rect",{
x:totalPadding("left")-modifiedBarWidth,
y:totalPadding("top")-modifiedBarWidth,
width:clipWidth-totalPadding("left")-totalPadding("right"),
height:clipHeight-totalPadding("top")-totalPadding("bottom")}))));




}}]);return ClipPath;}(_react2.default.Component);ClipPath.propTypes={/**
     * A unique ID for clipPath so, it could make sure using specific clipPath on
     * specific chart
     * @type {Number}
     */clipId:_react.PropTypes.number,/**
     * The clipPadding props specifies the paddings in clipPath
     * @type {Number}
     */clipPadding:_react.PropTypes.shape({top:_react.PropTypes.number,bottom:_react.PropTypes.number,left:_react.PropTypes.number,right:_react.PropTypes.number}),/**
     * The clipHeight props specifies the height of the clipPath
     * This value should be given as a number of pixels
     */clipHeight:_victoryCore.PropTypes.nonNegative,/**
     * The clipWidth props specifies the width of the clipPath
     * This value should be given as a number of pixels
     */clipWidth:_victoryCore.PropTypes.nonNegative,/**
     * The padding props specifies the amount of padding in number of pixels between
     * the edge of the chart and any rendered child components. This prop can be given
     * as a number or as an object with padding specified for top, bottom, left
     * and right.
     */padding:_react.PropTypes.oneOfType([_react.PropTypes.number,_react.PropTypes.shape({top:_react.PropTypes.number,bottom:_react.PropTypes.number,left:_react.PropTypes.number,right:_react.PropTypes.number})]),/**
     * The barWidth props specifies the barWidth of the bars this should be given when the
     * component is using in bar type charts
     */barWidth:_react.PropTypes.number};ClipPath.defaultProps={clipPadding:{top:5,bottom:5,left:0,right:0}};exports.default=ClipPath;